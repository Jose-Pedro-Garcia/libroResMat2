// libroResMat2
// Copyright (C) 2020  J.M. Perez Zerpa, et. al.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// ------------------------------------------
// Codigo para calcular el valor de J en secciones rectangulares.
// Resistencia de Materiales 2 - curso 2017
// Facultad de Ingenieria, Universidad de la Republica
// ------------------------------------------

real b=2.0, h=5.0;

border b1(t=0,b){x=t;y=0;};
border b2(t=0,h){x=b;y=t;};
border b3(t=0,b){x=b-t;y=h;};
border b4(t=0,h){x=0;y=h-t;};

int nb = 30;

mesh Th = buildmesh (b1(nb) + b2(nb*h/b) + b3(nb) + b4(nb*h/b) );

fespace Vh(Th,P1);   //  to change P1 in P2 to make P2 finite element.

Vh psi=0,v;
func f= 2;

problem FunPrand(psi,v) =
    int2d(Th)(  -dx(psi)*dx(v) - dy(psi)*dy(v) ) 
  + int2d(Th) ( v*f ) 
  + on(b1,b2,b3,b4,psi=0)  ;
  
FunPrand; 
plot(psi,wait=1,fill=1);

real J      = 2.0 * int2d(Th) ( psi ) ;
real betatabla = J / (h*b^3) ;

cout << "valor de J: " << J << "  Equivalente a valor beta de la tabla: " << betatabla  << endl;
